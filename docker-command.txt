#docker run -p [host port]:[container port] [image_name] 
#here container port means that port which i wrote on application docker file as expose and
#host port is that port which i want to run in my local. this host host port can be any port . but the container port must be same 
#as it is defined in dockerfile (If I explicitly mention)

docker run -p 8060:9090 springbootimage:latest 

#  http://localhost:8060/message
#  http://192.168.1.10:8060/message    /// find this ip using ipconfig which is mentioned under the Wireless LAN adapter Wi-Fi
#  both will work


###  FOR preserving data what we need to do is the following ######
### Suppose there are 2 machines.. machine A and machine B... 
### let's say machine A is mine and B is another system... now first of all I need to backup the DB in my machine A.
### Then in machine B, I need to copy the SQL file in the project root dir.

### For machine A

### in one terminal

step -1:  Enter the container ->   docker exec -it postgres_container_db bash
step- 2:  Inside the container, create a dump file:    pg_dump -U postgres -d dockerPractice -f /var/lib/postgresql/data/backup.sql
 
## in another terminal

step - 3: Copy backup to host ->  docker cp postgres_container_db:/var/lib/postgresql/data/backup.sql ./backup.sql


Now in machine B, do the following

step1 : Enter the container ->  docker exec -it postgres_container_db bash
step2 : Restore the database -> psql -U postgres -d dockerPractice -f /var/lib/postgresql/data/backup.sql   (N.B -> for having this backup.sql I have to put it to the project dir)


docker run -p 3307:3306 --name mysqlDBContainer -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=BookDB -d mysql
docker run -p 8090:8080 --name crudimage --net networkmysql -e MYSQL_HOST=mysqlContainer -e MYSQL_PORT:3306 -e MYSQL_DB_NAME=BookDB -e MYSQL_USER=root -e MYSQL_PASSWORD=root crudimage
docker network create networkmysql
docker network connect networkmysql mySqlContainer
docker build -t crudimage .
docker run -p 8060:8080 --name crudimage --net networkmysql -e MYSQL_HOST=mysqlContainer -e MYSQL_PORT:3306 -e MYSQL_DB_NAME=BookDB -e MYSQL_USER=root -e MYSQL_PASSWORD=root ullash997/crud-app
docker tag crud-app ullash997/crud-app:latest
docker push ullash997/crud-app:latest


docker run -d -p 5432:5432 -e POSTGRES_PASSWORD=admin -e POSTGRES_USER=admin -e POSTGRES_DB=farmingHubDB -v C:\postgres_container_data:/var/lib/postgresql/data --name=postgres_con postgres


docker run -d -p 8090:9090 --name=farming2 ullash997/farming-hub:0.0.1  


docker exec -t mysqlContainer mysqldump -u root -proot BookDB > backup.sql


on shell

docker exec -it postgres_con bash

psql -U admin -d farmingHubDB

\l


docker run -d --name pgadmin_container -p 5050:80 -e PGADMIN_DEFAULT_EMAIL=97.bhattacharjee.ullash@gmail.com -e PGADMIN_DEFAULT_PASSWORD=admin dpage/pgadmin4:latest            

docker run -d --name postgres_container -e POSTGRES_PASSWORD=admin -e POSTGRES_USER=admin -e POSTGRES_DB=invoice-mvc -p 5436:5432 -v D:\postgres_container_data:/var/lib/postgresql/data postgres:latest


docker run -d --name fileapp-container -p 8050:8080 -e SPRING_DATASOURCE_URL=jdbc:postgresql:localhost:5436/invoice-mvc -e SPRING_DATASOURCE_USERNAME=admin -e SPRING_DATASOURCE_PASSWORD=admin fileapp:latest



### to run compose file

docker-compose up --build




